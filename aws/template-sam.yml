---
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  BaseStackName:
    Type: String
    Default: wine-guesser-base

Globals:
  Function:
    Runtime: nodejs8.10
    MemorySize: 128
    Timeout: 60
  Api:
    Cors:
      AllowHeaders: "'content-type, authorization'"
      AllowOrigin: "'*, localhost:8080'"

Resources:
  GetAllRedWinesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-getAllRedWines-function
      CodeUri: ../dist/backend/
      Handler: index.getAllRedWinesHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /wines/red
            Method: get

  GetAllWhiteWinesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-getAllWhiteWines-function
      CodeUri: ../dist/backend/
      Handler: index.getAllWhiteWinesHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResource:
          Type: Api
          Properties:
            Path: /wines/white
            Method: get

  GetRedWineByVarietal:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-getRedWineByVarietal-function
      CodeUri: ../dist/backend/
      Handler: index.getRedWineByVarietalHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}
            Method: get
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}/{world}
            Method: get

  GetWhiteWineByVarietal:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-getWhiteWineByVarietal-function
      CodeUri: ../dist/backend/
      Handler: index.getWhiteWineByVarietalHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}
            Method: get
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}/{world}
            Method: get

  AddRedWine:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-addRedWine-function
      CodeUri: ../dist/backend/
      Handler: index.addRedWineHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}
            Method: put
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}/{world}
            Method: put

  AddWhiteWine:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-addWhiteWine-function
      CodeUri: ../dist/backend/
      Handler: index.addWhiteWineHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}
            Method: put
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}/{world}
            Method: put

  DeleteRedWine:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-deleteRedWine-function
      CodeUri: ../dist/backend/
      Handler: index.deleteRedWineHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}
            Method: delete
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/red/{varietal}/{world}
            Method: delete

  DeleteWhiteWine:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: wine-guesser-deleteWhiteWine-function
      CodeUri: ../dist/backend/
      Handler: index.deleteWhiteWineHandler
      Role:
        Fn::ImportValue:
          Fn::Sub: "${BaseStackName}-lambda-execution-role-arn"
      Events:
        PostResourceVarietal:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}
            Method: delete
        PostResourceWorld:
          Type: Api
          Properties:
            Path: /wines/white/{varietal}/{world}
            Method: delete

Outputs:
  ApiURL:
    Description: API endpoint URL for Wine Guesser SAM.
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"